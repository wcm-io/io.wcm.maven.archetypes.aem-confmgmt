#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
${symbol_pound}${symbol_pound} Maven Archetype for AEM Configuration Management usage


${symbol_pound}${symbol_pound}${symbol_pound} Basic usage

Generate a new AEM project using interactive mode by executing:

```
mvn archetype:generate \
  -DarchetypeGroupId=io.wcm.maven.archetypes \
  -DarchetypeArtifactId=io.wcm.maven.archetypes.aem-confmgmt \
  -DarchetypeVersion=${project.properties['releasedVersion.version']}
```

As minimal input parameters you have to enter a value for `configurationManagementName`, `groupId` and `projectName` - all other parameters can be derived from these or have sensible default parameters. But in most cases you want to specify more parameters, see next chapters for all available parameters and some examples.


${symbol_pound}${symbol_pound}${symbol_pound} Archetype parameters

| Parameter                           | Default   | Description
|-------------------------------------|-----------|-------------
| **configurationManagementName**     |           | Name of the configuration management project that is used for tagging the infrastructure. The rules for AWS S3 bucket names should be followed - only lowercase characters, numbers and hyphens allowed.
| **projectName**                     |           | Project name from AEM project
| **groupId**                         |           | Maven artifact groupId from AEM project
| **artifactId**                      | \*)       | Maven artifact "root" artifactId from AEM project, is suffixed for the individual modules
| **version**                         | \*)       | Maven artifact version from the AEM project - e.g. 1.0.0-SNAPSHOT
| **package**                         | \*)       | Java class package name - this is not used for this archetype, but a value has to be specified
| _Credentials and security_          |           | |
| **mavenRepositoryUrl**              | \*)       | URL to maven repository to fetch all artifacts from, including Adobe binaries and the AEM project's artifact. This should not point to Maven Central.
| **mavenRepositoryUser**             |           | Username for maven repository
| **mavenRepositoryPassword**         |           | Password for maven repository
| **aemAdminPassword**                | admin     | Password for AEM "admin" user and Felix console
| **accessRestrictionIpAddress**      | 0.0.0.0/0 | List of IP addresses or IP subnets to restrict access to when accessing the AEM infrastructure. You can specify multiple separated by ",". Example: 10.0.0.1/10,192.168.0.1
| **ansibleVaultPassword**            |           | Password for Ansible Vault encryption of all sensitive data in repository
| _AWS settings_                      |           | |
| **awsRegion**                       | eu-west-1 | AWS region
| **awsMachineSize**                  | medium    | AWS machine size (translates to fitting AWS instance types) - `small`/`medium`/`large`
| _Java SDK_                          |           | |
| **javaMajorVersion**                | 8         | Java major version 
| **javaMinorVersion**                | 181       | Java minor version
| **javaDownloadBaseUrl**             | \*\*)     | Download base URL for Java SDK binaries
| _File references_                   |           | |
| **sshPublicKeyFile**                | id_rsa.pub         | Path to SSH Public key that is used for authentication on the AWS machines
| **aemLicensePropertiesFile**        | license.properties | Path to AEM license.properties file
| _Feature flags_                     |           | |
| **optionVagrant**                   | y         | Include vagrant file to set up an Ansible control host in a local VM
| **optionTerraform**                 | y         | Include Terraform definition to setup infrastructure on AWS
| **optionAnsible**                   | y         | Include Ansible playbooks to deploy AEM infrastructure

\*) Sensible default<br/>
\*\*) Default Java SDK download base URL: `http://download.oracle.com/otn-pub/java`


${symbol_pound}${symbol_pound}${symbol_pound} Usage examples

These examples use the [wcm.io Samples][wcmio-samples] project as sample AEM project for deployment (it's available on Maven Central).

${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound} Setup with Ansible, Terraform, Vagrant

```
mvn archetype:generate -DinteractiveMode=false \
  -DarchetypeGroupId=io.wcm.maven.archetypes \
  -DarchetypeArtifactId=io.wcm.maven.archetypes.aem-confmgmt \
  -DarchetypeVersion=${project.properties['releasedVersion.version']} \
  -DconfigurationManagementName=sample-project-1 \
  -DprojectName=wcm-io-samples \
  -DgroupId=io.wcm.samples \
  -DartifactId=io.wcm.samples \
  -Dversion=1.2.2 \
  -DoptionAnsible=y \
  -DoptionTerraform=y \
  -DoptionVagrant=y \
  -DansibleVaultPassword=mypassword \
  -DaemAdminPassword=admin \
  -DmavenRepositoryUrl=http://your-maven-repository-url/ \
  -DmavenRepositoryUser=user \
  -DmavenRepositoryPassword=password
```

You need to place additional files in the working directory where you execute this command:

* `license.properties` - Your AEM license.properties file
* `id_rsa.pub` - SSH key that is used for accessing the AWS machines


${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound} Setup only with Ansible

```
mvn archetype:generate -DinteractiveMode=false \
  -DarchetypeGroupId=io.wcm.maven.archetypes \
  -DarchetypeArtifactId=io.wcm.maven.archetypes.aem-confmgmt \
  -DarchetypeVersion=${project.properties['releasedVersion.version']} \
  -DconfigurationManagementName=sample-project-2 \
  -DprojectName=wcm-io-samples \
  -DgroupId=io.wcm.samples \
  -DartifactId=io.wcm.samples \
  -Dversion=1.2.2 \
  -DoptionAnsible=y \
  -DoptionTerraform=n \
  -DoptionVagrant=n \
  -DansibleVaultPassword=mypassword \
  -DaemAdminPassword=admin \
  -DmavenRepositoryUrl=http://your-maven-repository-url/ \
  -DmavenRepositoryUser=user \
  -DmavenRepositoryPassword=password
```

You need to place additional files in the working directory where you execute this command:

* `license.properties` - Your AEM license.properties file


${symbol_pound}${symbol_pound}${symbol_pound} Requirements

* JDK 1.8
* Apache Maven 3.3.9 or higher
* Include the [Adobe Public Maven Repository][adobe-public-maven-repo] in your maven settings, see [wcm.io Maven Repositories][wcmio-maven] for details.
* **Important**: You have to manually upload the AEM Quickstart JAR and AEM dispatcher binaries to your Maven Artifact Manager following [these conventions][aem-binaries-conventions] for naming them.


[adobe-public-maven-repo]: https://repo.adobe.com/nexus/content/groups/public/
[wcmio-maven]: https://wcm.io/maven.html
[aem-binaries-conventions]: https://wcm-io.atlassian.net/wiki/x/AYC9Aw
[wcmio-samples]: https://wcm.io/samples/
